{{- if .Values.postgresql.enabled }}
# ConfigMap для PostgreSQL
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-conf
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: sausage-store
    env: {{ .Values.environment | default "production" }}
data:
  POSTGRES_DB: {{ .Values.postgresql.database }}
  POSTGRES_USER: {{ .Values.postgresql.username }}
  POSTGRES_PASSWORD: {{ .Values.postgresql.password }}

---
# Service для PostgreSQL
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: sausage-store
    env: {{ .Values.environment | default "production" }}
spec:
  ports:
    - port: {{ .Values.postgresql.port }}
      targetPort: {{ .Values.postgresql.port }}
  selector:
    app: postgres
  clusterIP: None

---
# StatefulSet для PostgreSQL
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook-weight: "-5"
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: sausage-store
    env: {{ .Values.environment | default "production" }}
spec:
  serviceName: postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        app.kubernetes.io/name: postgres
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        - name: fix-permissions
          image: busybox
          command: ["sh", "-c", "chown -R 999:999 /var/lib/postgresql/data && rm -rf /var/lib/postgresql/data/lost+found"]
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "100m"
              memory: "128Mi"
      containers:
        - name: postgres
          image: {{ .Values.postgresql.image }}
          envFrom:
            - configMapRef:
                name: postgres-conf
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: {{ .Values.postgresql.port }}
          resources:
            requests:
              cpu: {{ .Values.postgresql.resources.requests.cpu }}
              memory: {{ .Values.postgresql.resources.requests.memory }}
            limits:
              cpu: {{ .Values.postgresql.resources.limits.cpu }}
              memory: {{ .Values.postgresql.resources.limits.memory }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.postgresql.persistence.size }}
        {{- if .Values.postgresql.persistence.storageClass }}
        storageClassName: {{ .Values.postgresql.persistence.storageClass }}
        {{- end }}
{{- end }}