{{- if eq .Values.infra.postgresql.enabled true }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: sausage-store
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgres
          image: postgres:14
          imagePullPolicy: {{ .Values.infra.postgresql.imagePullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: {{ .Values.infra.postgresql.containerPort | int }}
          env:
            - name: POSTGRES_USER
              value: {{ .Values.infra.postgresql.env.PGSQL_USERNAME }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.infra.postgresql.env.PGSQL_PASSWORD }}
            - name: POSTGRES_DB
              value: {{ .Values.infra.postgresql.env.PGSQL_DB }}
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  ports:
    - port: {{ .Values.infra.postgresql.containerPort }}
      protocol: TCP
      targetPort: {{ .Values.infra.postgresql.containerPort }}
  selector:
    app: postgresql
{{- end }}
