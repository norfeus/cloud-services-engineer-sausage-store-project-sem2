global:
  imagePullPolicy: Always
  # vault:
  #  host: ip
  #  name: vault
  #  vaultToken: someToken
  secret:
    DB_URI: mongodb://root:rootpassword@sausage-store-mongodb:27017/reports?authSource=admin


frontend:
### В чарте frontend отсутствуют некоторые важные файлы. Поймите какие и опишите их.
  replicas: 1
  revisionHistoryLimit: 15
  strategy:
    type: Recreate
  service:
    port: 80
  ingress:
    host: nagaitsev.2sem.students-projects.ru # Корректный домен будет указан в задании
    path: /
    pathType: Prefix
  containerPort: 80
  image: norff/sausage-frontend:latest
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "1"
  nginxConf: nginx.conf

backend:
  annotations:
    path: /actuator/prometheus
    port: "8080"
    scrape: "true"
  env:
    postgresUri: jdbc:postgresql://postgresql:5432/sausage-store
    postgresUser: store
    postgresPassword: storepassword
    reportPath: /logs/reports
    logPath: /logs
  service:
    port: 8080
  revisionHistoryLimit: 15
  replicas: 1
  image: norff/sausage-backend:latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "1"
  containerPort: 8080
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 60
    failureThreshold: 3
    timeoutSeconds: 5
  vpa:
    enabled: true
    minAllowed:
      memory: "200Mi"
      cpu: "100m"
    maxAllowed:
      memory: "700Mi"
      cpu: "1"


backend-report:
  enabled: true
  replicas: 1
  strategy:
    type: Recreate
  image: norff/sausage-backend-report:latest
  containerPort: 8080
  imagePullPolicy: IfNotPresent

  configMap:
    PORT: "8080"

  secret:
    DB_URI: bW9uZ29kYjovL3Jvb3Q6cm9vdHBhc3N3b3JkQHNhdXNhZ2Utc3RvcmUtbW9uZ29kYjoyNzAxNy9yZXBvcnRzP2F1dGhTb3VyY2U9YWRtaW4=

  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "500m"

  hpa:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 75

### Опишите значения для backend-report
### Приложение должно использовать стратегию Recreate
### Приложение использует переменную PORT - порт, на котором оно запустится и DB - Uri-подключение к mongodb. 
### DB положите в Secret, PORT в ConfigMap
### Опишите HPA для backend-report

infra:
  postgresql:
    enabled: true
    image: postgres:14
    port: 5432
    database: sausage-store
    username: store
    password: storepassword
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "200m"
        memory: "256Mi"
    persistence:
      enabled: true
      storageClass: ""
      size: 2Gi
    

  ### Опишите необходимые переменные для развертывания PostgresQL в кластере Kubernetes
  mongodb:
    env:
      MONGO_INITDB_ROOT_USERNAME: reports
      MONGO_INITDB_ROOT_PASSWORD: reportspassword
      MONGO_INITDB_DATABASE: sausage-store
    containerPort: 27017
    persistence:
      size: "5Gi"
    resources:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 300m
        memory: 256Mi
